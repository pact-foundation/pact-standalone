# Pact Standalone

![Build](https://github.com/pact-foundation/pact-standalone/workflows/Build/badge.svg)

Creates a standalone pact command line executable containing

- The ruby pact implementation via Traveling Ruby

## Package contents

This version (<%= ENV.fetch('VERSION') %>) of the Pact standalone executables package contains:

  * pact gem <%= Pact::VERSION %>
  * pact-mock_service gem <%= Pact::MockService::VERSION %>
  * pact-support gem <%= Pact::Support::VERSION %>
  * pact-provider-verifier gem <%= Pact::ProviderVerifier::VERSION %>
  * pact_broker-client gem <%= PactBroker::Client::VERSION %>
  * pact-message gem <%= Pact::Message::VERSION %>

Binaries will be extracted into `pact/bin`:

```
./pact/bin/
â”œâ”€â”€ pact-broker
â”œâ”€â”€ pactflow
â”œâ”€â”€ pact-message
â”œâ”€â”€ pact-mock-service
â”œâ”€â”€ pact-provider-verifier
â””â”€â”€ pact-stub-service
```

### Windows Users

Please append `.bat` to any of the provided ruby-based binaries

eg.

```ps1
  .\pact\bin\pact-broker.bat
```

## Installation

See the [release page][releases].

[releases]: https://github.com/pact-foundation/pact-standalone/releases

## Supported Platforms

Ruby is not required on the host platform, Ruby 3.3.9 is provided in the distributable.

| OS     | Ruby      | Architecture   | Supported |
| -------| -------   | ------------   | --------- |
| MacOS  | 3.3.9     | x86_64         | âœ…        |
| MacOS  | 3.3.9     | aarch64 (arm64)| âœ…        |
| Linux  | 3.3.9     | x86_64         | âœ…        |
| Linux  | 3.3.9     | aarch64 (arm64)| âœ…        |
| Windows| 3.3.9     | x86_64         | âœ…        |
| Windows| 3.3.9     | aarch64 (arm64)| ðŸš§        |

ðŸš§ - Tested under emulation mode x86_64 in Windows on ARM

## Usage

<a name="pact-mock-service"></a>
### pact-mock-service

```
<%= pact_mock_service_usage %>
```

<a name="pact-stub-service"></a>
### pact-stub-service

```
<%= pact_stub_service_usage %>
```

<a name="pact-provider-verifier"></a>
### pact-provider-verifier

To connect to a Pact Broker that uses custom SSL cerificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.

```
<%= pact_provider_verifier_usage %>
```

<a name="pact-broker-client"></a>
### pact-broker client

To connect to a Pact Broker that uses custom SSL cerificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.

<a name="pact-broker-client-publish"></a>
#### publish

```
<%= pact_publish_usage %>
```

<a name="pact-broker-client-can-i-deploy"></a>
#### can-i-deploy

```
<%= pact_broker_can_i_deploy_usage %>
```

<a name="pact"></a>

<a name="pactflow-client"></a>
### pactflow client

#### publish-provider-contract

```
<%= pactflow_publish_provider_contract_usage %>
```

### pact

<a name="pact-docs"></a>
#### docs
```
<%= pact_docs_usage %>
```

### pact-message

```
<%= pact_message_usage %>
```

## Troubleshooting

### SSL

To connect to a Pact Broker that uses custom SSL certificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.
